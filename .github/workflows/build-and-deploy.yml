name: Build and Deploy Android App

on:
  push:
    branches:
      - 'master'  # Trigger on push to any branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Cache Android NDK
        uses: actions/cache@v4
        with:
          path: /usr/local/lib/android/sdk/ndk
          key: ${{ runner.os }}-ndk-21.4.7075529
          restore-keys: |
            ${{ runner.os }}-ndk-
      
      - name: Cache CMake
        uses: actions/cache@v4
        with:
          path: /usr/local/lib/android/sdk/cmake
          key: ${{ runner.os }}-cmake-3.22.1
          restore-keys: |
            ${{ runner.os }}-cmake-
      
      - name: Cache Native Build Outputs
        uses: actions/cache@v4
        with:
          path: |
            TMessagesProj/.cxx
            TMessagesProj/build/intermediates/cmake
          key: ${{ runner.os }}-native-build-${{ hashFiles('TMessagesProj/jni/**/*.c', 'TMessagesProj/jni/**/*.cpp', 'TMessagesProj/jni/**/*.h', 'TMessagesProj/jni/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-native-build-
      
      - name: Cache Build Outputs
        uses: actions/cache@v4
        with:
          path: |
            TMessagesProj/build/intermediates/javac
            TMessagesProj/build/intermediates/compile_library_classes_jar
            TMessagesProj/build/tmp
            TMessagesProj_App/build/intermediates/javac
          key: ${{ runner.os }}-build-${{ hashFiles('TMessagesProj/src/**/*.java', 'TMessagesProj_App/src/**/*.java') }}
          restore-keys: |
            ${{ runner.os }}-build-
      
      - name: Generate version info
        id: version
        run: |
          VERSION_NAME=$(date +'%Y.%m.%d')
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "Generated VERSION_NAME: $VERSION_NAME"
          echo "Using VERSION_CODE: ${{ github.run_number }}"
      
      - name: Create gradle.properties with signing credentials
        run: |
          echo "RELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}" >> gradle.properties
          echo "RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}" >> gradle.properties
          echo "RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}" >> gradle.properties
          echo "APP_PACKAGE=${{ secrets.APP_PACKAGE }}" >> gradle.properties
          echo "APP_VERSION_NAME=${{ steps.version.outputs.version_name }}" >> gradle.properties
          echo "APP_VERSION_CODE=${{ github.run_number }}" >> gradle.properties
      
      - name: Build Release APK
        run: ./gradlew :TMessagesProj_App:assembleAfatRelease --stacktrace
        env:
          GRADLE_OPTS: -Dorg.gradle.daemon=false
      
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: TMessagesProj_App/build/outputs/apk/afat/release/*.apk
          retention-days: 30
      
      - name: Upload APK to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_CREDENTIALS }}
          groups: testers
          file: TMessagesProj_App/build/outputs/apk/afat/release/app.apk
          releaseNotes: |
            Version: ${{ steps.version.outputs.version_name }} (Build #${{ github.run_number }})
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            Commit message: ${{ github.event.head_commit.message }}
